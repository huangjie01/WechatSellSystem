Starting WechatSellApplication on huangjie-PC with PID 6541 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@515c6049: startup date [Tue Aug 27 20:46:19 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c47c5921] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3909 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@515c6049: startup date [Tue Aug 27 20:46:19 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/finished],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 10.489 seconds (JVM running for 11.606)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@515c6049: startup date [Tue Aug 27 20:46:19 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 18447 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@515c6049: startup date [Tue Aug 27 21:47:48 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b89e96b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5719 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@515c6049: startup date [Tue Aug 27 21:47:48 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/finished],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 13.858 seconds (JVM running for 15.775)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@515c6049: startup date [Tue Aug 27 21:47:48 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 16578 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:03:04 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f0dab559] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3369 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:03:04 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/finished],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 10.939 seconds (JVM running for 11.883)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:03:04 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 17660 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:14:00 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e5b56c4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3489 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:14:00 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/finished],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 8.474 seconds (JVM running for 9.195)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:14:00 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 18086 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:15:14 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$86f3e5dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4178 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:15:14 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/finished],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 9.563 seconds (JVM running for 10.22)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:15:14 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 18902 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:23:12 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$32af3660] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3731 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:23:12 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/finished],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 9.511 seconds (JVM running for 10.062)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:23:12 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 19264 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71d44a3: startup date [Tue Aug 27 23:26:49 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a3b78fcb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3410 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71d44a3: startup date [Tue Aug 27 23:26:49 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/finished],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 8.141 seconds (JVM running for 8.702)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71d44a3: startup date [Tue Aug 27 23:26:49 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 19482 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:28:18 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$32af3660] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3316 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:28:18 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/finished],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 8.594 seconds (JVM running for 9.562)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:28:18 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 19617 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:28:48 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$84187f5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5000 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:28:48 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/finished],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 10.171 seconds (JVM running for 10.914)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:28:48 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 22330 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:46:15 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$61d193a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3731 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:46:15 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/finished],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 8.741 seconds (JVM running for 9.422)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
HHH000397: Using ASTQueryTranslatorFactory
