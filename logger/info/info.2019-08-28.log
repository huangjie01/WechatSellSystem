Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@73a1e9a9: startup date [Tue Aug 27 23:46:15 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 10433 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@397fbdb: startup date [Wed Aug 28 21:30:58 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$79a6d613] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3283 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:339)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$e32d3a33.CGLIB$jpaVendorAdapter$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$e32d3a33$$FastClassBySpringCGLIB$$e33f900c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$e32d3a33.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1082)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:857)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:124)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.huangjie.sell.WechatSellApplication.main(WechatSellApplication.java:10)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326)
	... 61 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:319)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:212)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:736)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:668)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:483)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 62 common frames omitted
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000342: Could not obtain connection to query metadata : Access denied for user 'root'@'localhost' (using password: YES)
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
Stopping service [Tomcat]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting WechatSellApplication on huangjie-PC with PID 10509 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@33d512c1: startup date [Wed Aug 28 21:31:41 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$12e05ec4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3727 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@33d512c1: startup date [Wed Aug 28 21:31:41 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 9.543 seconds (JVM running for 10.156)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@33d512c1: startup date [Wed Aug 28 21:31:41 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 12571 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b71e916: startup date [Wed Aug 28 21:54:47 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b7d21d37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4409 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b71e916: startup date [Wed Aug 28 21:54:47 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 9.762 seconds (JVM running for 10.578)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b71e916: startup date [Wed Aug 28 21:54:47 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 12885 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b71e916: startup date [Wed Aug 28 21:57:11 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$adbe7b51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3630 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b71e916: startup date [Wed Aug 28 21:57:11 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 9.005 seconds (JVM running for 9.627)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b71e916: startup date [Wed Aug 28 21:57:11 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 13316 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b71e916: startup date [Wed Aug 28 22:00:19 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e949fd3a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4220 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b71e916: startup date [Wed Aug 28 22:00:19 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 11.592 seconds (JVM running for 12.719)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b71e916: startup date [Wed Aug 28 22:00:19 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 15100 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b71e916: startup date [Wed Aug 28 22:11:36 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$edb32423] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3683 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b71e916: startup date [Wed Aug 28 22:11:36 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 9.083 seconds (JVM running for 9.731)
Starting ProductCategoryMapperTest on huangjie-PC with PID 19140 (started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@9816741: startup date [Wed Aug 28 22:45:17 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
No MyBatis mapper was found in '[com.huangjie.sell]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a0deeca7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@9816741: startup date [Wed Aug 28 22:45:17 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started ProductCategoryMapperTest in 9.418 seconds (JVM running for 11.087)
Closing org.springframework.web.context.support.GenericWebApplicationContext@9816741: startup date [Wed Aug 28 22:45:17 CST 2019]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting ProductCategoryMapperTest on huangjie-PC with PID 19311 (started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@78452606: startup date [Wed Aug 28 22:47:48 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$42629fa6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@78452606: startup date [Wed Aug 28 22:47:48 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started ProductCategoryMapperTest in 9.123 seconds (JVM running for 10.394)
Closing org.springframework.web.context.support.GenericWebApplicationContext@78452606: startup date [Wed Aug 28 22:47:48 CST 2019]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting ProductCategoryMapperTest on huangjie-PC with PID 20170 (started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@448c8166: startup date [Wed Aug 28 22:55:24 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$857e6b96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@448c8166: startup date [Wed Aug 28 22:55:24 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started ProductCategoryMapperTest in 8.818 seconds (JVM running for 10.135)
Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
Closing org.springframework.web.context.support.GenericWebApplicationContext@448c8166: startup date [Wed Aug 28 22:55:24 CST 2019]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting ProductCategoryMapperTest on huangjie-PC with PID 20320 (started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@448c8166: startup date [Wed Aug 28 22:56:16 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$42629fa6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@448c8166: startup date [Wed Aug 28 22:56:16 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started ProductCategoryMapperTest in 8.79 seconds (JVM running for 10.058)
Closing org.springframework.web.context.support.GenericWebApplicationContext@448c8166: startup date [Wed Aug 28 22:56:16 CST 2019]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting ProductCategoryMapperTest on huangjie-PC with PID 21051 (started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2235eaab: startup date [Wed Aug 28 23:02:11 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f07a99a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@2235eaab: startup date [Wed Aug 28 23:02:11 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started ProductCategoryMapperTest in 8.277 seconds (JVM running for 9.448)
Closing org.springframework.web.context.support.GenericWebApplicationContext@2235eaab: startup date [Wed Aug 28 23:02:11 CST 2019]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting ProductCategoryMapperTest on huangjie-PC with PID 21267 (started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2235eaab: startup date [Wed Aug 28 23:04:30 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c2113086] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@2235eaab: startup date [Wed Aug 28 23:04:30 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started ProductCategoryMapperTest in 8.839 seconds (JVM running for 10.019)
Closing org.springframework.web.context.support.GenericWebApplicationContext@2235eaab: startup date [Wed Aug 28 23:04:30 CST 2019]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting ProductCategoryMapperTest on huangjie-PC with PID 21673 (started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2235eaab: startup date [Wed Aug 28 23:07:18 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$54b0c55e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@2235eaab: startup date [Wed Aug 28 23:07:18 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started ProductCategoryMapperTest in 8.262 seconds (JVM running for 9.461)
Closing org.springframework.web.context.support.GenericWebApplicationContext@2235eaab: startup date [Wed Aug 28 23:07:18 CST 2019]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting ProductCategoryMapperTest on huangjie-PC with PID 21734 (started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2235eaab: startup date [Wed Aug 28 23:07:53 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c2113086] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@2235eaab: startup date [Wed Aug 28 23:07:53 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started ProductCategoryMapperTest in 8.936 seconds (JVM running for 10.241)
Closing org.springframework.web.context.support.GenericWebApplicationContext@2235eaab: startup date [Wed Aug 28 23:07:53 CST 2019]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting ProductCategoryMapperTest on huangjie-PC with PID 21819 (started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3bcd05cb: startup date [Wed Aug 28 23:09:51 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9d62c493] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3bcd05cb: startup date [Wed Aug 28 23:09:51 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started ProductCategoryMapperTest in 8.172 seconds (JVM running for 9.405)
Closing org.springframework.web.context.support.GenericWebApplicationContext@3bcd05cb: startup date [Wed Aug 28 23:09:51 CST 2019]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting ProductCategoryMapperTest on huangjie-PC with PID 21975 (started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3bcd05cb: startup date [Wed Aug 28 23:12:08 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3d3d0b06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3bcd05cb: startup date [Wed Aug 28 23:12:08 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started ProductCategoryMapperTest in 8.557 seconds (JVM running for 9.772)
Closing org.springframework.web.context.support.GenericWebApplicationContext@3bcd05cb: startup date [Wed Aug 28 23:12:08 CST 2019]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b71e916: startup date [Wed Aug 28 22:11:36 CST 2019]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WechatSellApplication on huangjie-PC with PID 22747 (/home/huangjie/JavaProject/WechatSellSystem/target/classes started by huangjie in /home/huangjie/JavaProject/WechatSellSystem)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38425407: startup date [Wed Aug 28 23:36:39 CST 2019]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.huangjie.sell.repository.ProductInfoRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3bd670e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.40
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3781 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38425407: startup date [Wed Aug 28 23:36:39 CST 2019]; root of context hierarchy
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<com.huangjie.sell.dto.OrderDTO> com.huangjie.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.huangjie.sell.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.huangjie.sell.controller.BuyerOrderController.create(com.huangjie.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO<java.util.List<com.huangjie.sell.dto.OrderDTO>> com.huangjie.sell.controller.BuyerOrderController.list(java.lang.String,int,int)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.huangjie.sell.VO.ResultVO com.huangjie.sell.controller.BuyerProductController.list()
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerOrderController.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerProductContainer.list(int,int,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/loginOut],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.loginOut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.huangjie.sell.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellSystemExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started WechatSellApplication in 8.952 seconds (JVM running for 9.55)
